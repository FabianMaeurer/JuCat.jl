var documenterSearchIndex = {"docs":
[{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"CurrentModule = JuCat","category":"page"},{"location":"CoherentSheaves/#Coherent-sheaves-on-Finite-Sets","page":"Coherent Sheaves","title":"Coherent sheaves on Finite Sets","text":"","category":"section"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"Coherent sheaves on a finite set X are characterised by the stalks of the the elements x in X. I.e. a coherent sheaf on X is a collection of vector spaces V_x for each xin X. More generally for a group G and a G-set X we can define consider G-equivariant sheaves on X. In this case a sheaf is specified by representations of the stabilizers of representatives for the orbits.","category":"page"},{"location":"CoherentSheaves/#Equivariant-Coherent-Sheaves","page":"Coherent Sheaves","title":"Equivariant Coherent Sheaves","text":"","category":"section"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"We provide the datatype","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"CoherentSheaf{T,G} <: Object","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"The category of equivariant coherent sheafes has type","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"CohSheaves{T,G} <: MultiTensorCategory{T}","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"and can be constructed via","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"CohSheaves","category":"page"},{"location":"CoherentSheaves/#JuCat.CohSheaves","page":"Coherent Sheaves","title":"JuCat.CohSheaves","text":"CohSheaves(X::GSet,F::Field)\n\nThe category of G-equivariant coherent sheafes on X.\n\n\n\n\n\nCohSheaves(X, F::Field)\n\nThe category of coherent sheafes on X.\n\n\n\n\n\n","category":"type"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"Morphisms are given by morphisms of representations of the stalks and are of type","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"CohSheafMorphism{T,G} <: Morphism","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"Modules = [JuCat]\nPages = [\"CoherentSheaves.jl\"]","category":"page"},{"location":"CoherentSheaves/#JuCat.CohSheaves-Tuple{Any, AbstractAlgebra.Field}","page":"Coherent Sheaves","title":"JuCat.CohSheaves","text":"CohSheaves(X, F::Field)\n\nThe category of coherent sheafes on X.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.CohSheaves-Tuple{Oscar.GSet, AbstractAlgebra.Field}","page":"Coherent Sheaves","title":"JuCat.CohSheaves","text":"CohSheaves(X::GSet,F::Field)\n\nThe category of G-equivariant coherent sheafes on X.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#AbstractAlgebra.isisomorphic-Union{Tuple{G}, Tuple{T}, Tuple{CohSheaf{T, G}, CohSheaf{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"AbstractAlgebra.isisomorphic","text":"isisomorphic(X::CohSheaf{T,G}, Y::CohSheaf{T,G}) where {T,G}\n\nCheck whether Xand Y are isomorphic and the isomorphism if possible.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Base.one-Union{Tuple{CohSheaves{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Coherent Sheaves","title":"Base.one","text":"one(C::CohSheaves{T,G}) where {T,G}\n\nReturn the one object in C.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Base.zero-Tuple{CohSheaves}","page":"Coherent Sheaves","title":"Base.zero","text":"zero(C::CohSheaves)\n\nReturn the zero sheaf on the G-set.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Hecke.tensor_product-Union{Tuple{G}, Tuple{T}, Tuple{CohSheafMorphism{T, G}, CohSheafMorphism{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"Hecke.tensor_product","text":"tensor_product(f::CohSheafMorphism{T,G}, g::CohSheafMorphism{T,G}) where {T,G}\n\nReturn the tensor product of morphisms of equivariant coherent sheaves.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Hecke.tensor_product-Union{Tuple{G}, Tuple{T}, Tuple{CohSheaf{T, G}, CohSheaf{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"Hecke.tensor_product","text":"tensor_product(X::CohSheaf{T,G}, Y::CohSheaf{T,G}) where {T,G}\n\nReturn the tensor product of equivariant coherent sheaves.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.Hom-Union{Tuple{G}, Tuple{T}, Tuple{CohSheaf{T, G}, CohSheaf{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"JuCat.Hom","text":"Hom(X::CohSheaf{T,G}, Y::CohSheaf{T,G}) where {T,G}\n\nReturn Hom(XY) as a vector space.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.decompose-Tuple{CohSheaf}","page":"Coherent Sheaves","title":"JuCat.decompose","text":"decompose(X::CohSheaf)\n\nDecompose X into a direct sum of simple objects with multiplicity.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.dsum-Union{Tuple{G}, Tuple{T}, Tuple{CohSheafMorphism{T, G}, CohSheafMorphism{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"JuCat.dsum","text":"dsum(f::CohSheafMorphism{T,G}, g::CohSheafMorphism{T,G}) where {T,G}\n\nReturn the direct sum of morphisms of sheaves.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.dsum-Union{Tuple{G}, Tuple{T}, Tuple{CohSheaf{T, G}, CohSheaf{T, G}}, Tuple{CohSheaf{T, G}, CohSheaf{T, G}, Bool}} where {T, G}","page":"Coherent Sheaves","title":"JuCat.dsum","text":"dsum(X::CohSheaf{T,G}, Y::CohSheaf{T,G}, morphisms::Bool = false) where {T,G}\n\nReturn the direct sum of sheaves. Return also the inclusion and projection if morphisms = true.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.simples-Union{Tuple{CohSheaves{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Coherent Sheaves","title":"JuCat.simples","text":"simples(C::CohSheaves{T,G}) where {T,G}\n\nReturn the simple objects of C.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.stalks-Tuple{CohSheaf}","page":"Coherent Sheaves","title":"JuCat.stalks","text":"stalks(X::CohSheaf)\n\nReturn the stalks of X.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Oscar.issemisimple-Tuple{CohSheaves}","page":"Coherent Sheaves","title":"Oscar.issemisimple","text":"issemisimple(C::CohSheaves)\n\nReturn whether Cis semisimple.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Convolution-Category","page":"Coherent Sheaves","title":"Convolution Category","text":"","category":"section"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"The objects of this category are again G-equivariant coherent sheaves on a finite G-set Xtimes X. But we endow them with a different monoidal product.","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"Let p_ij Xtimes Xtimes X to X times X be the canonical projections. Then we define the monoidal product of two coherent sheaves xand y","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"beginalign* xotimes y = p_13_ast(p_12^ast(x)otimes p_23^ast(y))endalign*","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"where otimesis the monoidal product of Coh(Xtimes Xtimes X). Similar for morphisms.","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"Objects in this category are of type","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"ConvolutionObject{T,G} <: Object","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"while the convolution category is of type","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"ConvolutionCategory{T,G} <: MultiTensorCategory{T}","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"and can be constructed by","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"ConvolutionCategory","category":"page"},{"location":"CoherentSheaves/#JuCat.ConvolutionCategory","page":"Coherent Sheaves","title":"JuCat.ConvolutionCategory","text":"ConvolutionCategory(X::GSet, K::Field)\n\nReturn the category of equivariant coherent sheaves on X with convolution product.\n\n\n\n\n\nConvolutionCategory(X, K::Field)\n\nReturn the category of coherent sheaves on X with convolution product.\n\n\n\n\n\n","category":"type"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"Morphisms are just morphisms of coherent sheaves with the new tensor product.","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"ConvolutionMorphism{T,G} <: Morphism","category":"page"},{"location":"CoherentSheaves/","page":"Coherent Sheaves","title":"Coherent Sheaves","text":"Modules = [JuCat]\nPages = [\"ConvolutionCategory.jl\"]","category":"page"},{"location":"CoherentSheaves/#JuCat.ConvolutionCategory-Tuple{Any, AbstractAlgebra.Field}","page":"Coherent Sheaves","title":"JuCat.ConvolutionCategory","text":"ConvolutionCategory(X, K::Field)\n\nReturn the category of coherent sheaves on X with convolution product.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.ConvolutionCategory-Tuple{Oscar.GSet, AbstractAlgebra.Field}","page":"Coherent Sheaves","title":"JuCat.ConvolutionCategory","text":"ConvolutionCategory(X::GSet, K::Field)\n\nReturn the category of equivariant coherent sheaves on X with convolution product.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#AbstractAlgebra.isisomorphic-Union{Tuple{G}, Tuple{T}, Tuple{ConvolutionObject{T, G}, ConvolutionObject{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"AbstractAlgebra.isisomorphic","text":"isisomorphic(X::ConvolutionObject{T,G}, Y::ConvolutionObject{T,G})\n\nCheck whether Xand Yare isomorphic. Return the isomorphism if true.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Base.one-Union{Tuple{ConvolutionCategory{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Coherent Sheaves","title":"Base.one","text":"one(C::ConvolutionCategory{T,G}) where {T,G}\n\nReturn the one object in Conv(X).\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Base.zero-Union{Tuple{ConvolutionCategory{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Coherent Sheaves","title":"Base.zero","text":"zero(C::ConvolutionCategory{T,G}) where {T,G}\n\nReturn the zero object in Conv(X).\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Hecke.tensor_product-Union{Tuple{G}, Tuple{T}, Tuple{ConvolutionMorphism{T, G}, ConvolutionMorphism{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"Hecke.tensor_product","text":"tensor_product(f::ConvolutionMorphism{T,G}, g::ConvolutionMorphism{T,G}) where {T,G}\n\nReturn the convolution product of morphisms of coherent sheaves.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Hecke.tensor_product-Union{Tuple{G}, Tuple{T}, Tuple{ConvolutionObject{T, G}, ConvolutionObject{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"Hecke.tensor_product","text":"tensor_product(X::ConvolutionObject{T,G}, Y::ConvolutionObject{T,G}) where {T,G}\n\nReturn the convolution product of coherent sheaves.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.Hom-Union{Tuple{G}, Tuple{T}, Tuple{ConvolutionObject{T, G}, ConvolutionObject{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"JuCat.Hom","text":"Hom(X::ConvolutionObject{T,G}, Y::ConvolutionObject{T,G}) where {T,G}\n\nReturn Hom(XY) as a vector space.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.decompose-Tuple{ConvolutionObject}","page":"Coherent Sheaves","title":"JuCat.decompose","text":"decompose(X::ConvolutionObject)\n\nDecompose X into a direct sum of simple objects with multiplicities.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.dsum-Union{Tuple{G}, Tuple{T}, Tuple{ConvolutionMorphism{T, G}, ConvolutionMorphism{T, G}}} where {T, G}","page":"Coherent Sheaves","title":"JuCat.dsum","text":"dsum(f::ConvolutionMorphism{T,G}, g::ConvolutionMorphism{T,G}) where {T,G}\n\nReturn the direct sum of morphisms of coherent sheaves (with convolution product).\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.dsum-Union{Tuple{G}, Tuple{T}, Tuple{ConvolutionObject{T, G}, ConvolutionObject{T, G}}, Tuple{ConvolutionObject{T, G}, ConvolutionObject{T, G}, Bool}} where {T, G}","page":"Coherent Sheaves","title":"JuCat.dsum","text":"dsum(X::ConvolutionObject{T,G}, Y::ConvolutionObject{T,G}, morphisms::Bool = false) where {T,G}\n\ndocumentation\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.orbit_stabilizers-Tuple{ConvolutionCategory}","page":"Coherent Sheaves","title":"JuCat.orbit_stabilizers","text":"orbit_stabilizers(C::ConvolutionCategory)\n\nReturn the stabilizers of representatives of the orbits.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.simples-Union{Tuple{ConvolutionCategory{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Coherent Sheaves","title":"JuCat.simples","text":"simples(C::ConvolutionCategory{T,G}) where {T,G}\n\nReturn a list of simple objects in Conv(X).\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#JuCat.stalks-Tuple{ConvolutionObject}","page":"Coherent Sheaves","title":"JuCat.stalks","text":"stalks(X::ConvolutionObject)\n\nReturn the stalks of the sheaf X.\n\n\n\n\n\n","category":"method"},{"location":"CoherentSheaves/#Oscar.issemisimple-Tuple{ConvolutionCategory}","page":"Coherent Sheaves","title":"Oscar.issemisimple","text":"issemisimple(C::ConvolutionCategory)\n\nCheck whether C semisimple.\n\n\n\n\n\n","category":"method"},{"location":"Representations/","page":"Representations","title":"Representations","text":"CurrentModule = JuCat","category":"page"},{"location":"Representations/#Representations","page":"Representations","title":"Representations","text":"","category":"section"},{"location":"Representations/","page":"Representations","title":"Representations","text":"We provide a simple abstract type hirarchy for representation categories:","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"abstract type RepresentationCategory{T} <: TensorCategory{T}","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"A representation category always requires the field","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"base_ring::Field","category":"page"},{"location":"Representations/#Representations-of-Finite-groups","page":"Representations","title":"Representations of Finite groups","text":"","category":"section"},{"location":"Representations/","page":"Representations","title":"Representations","text":"Let G be a finite group. We consider the category of finite dimensinal k-representations of G.","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"GroupRepresentationCategory{T,G} <: RepresentationCategory{T}","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"Build it with the constructor","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"RepresentationCategory(::GAPGroup, ::Field)","category":"page"},{"location":"Representations/#JuCat.RepresentationCategory-Tuple{Oscar.GAPGroup, AbstractAlgebra.Field}","page":"Representations","title":"JuCat.RepresentationCategory","text":"RepresentationCategory(G::GAPGroup, F::Field)\n\nCategory of finite dimensonal group representations of \\G.\n\n\n\n\n\n","category":"method"},{"location":"Representations/","page":"Representations","title":"Representations","text":"A group representation is defined by a group homomorphism from G into a finite dimensional vector space k^n. These objects are of type","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"GroupRepresentation{T,G} <: Representation","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"They are constructed in one of two ways, either by images of generators or by a function","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"Representation(::GAPGroup,::Vector,::Vector)\nRepresentation(::GAPGroup,::Function)","category":"page"},{"location":"Representations/#JuCat.Representation-Tuple{Oscar.GAPGroup, Vector{T} where T, Vector{T} where T}","page":"Representations","title":"JuCat.Representation","text":"Representation(G::GAPGroup, pre_img::Vector, img::Vector)\n\nGroup representation defined by the images of generators of G.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#JuCat.Representation-Tuple{Oscar.GAPGroup, Function}","page":"Representations","title":"JuCat.Representation","text":"Representation(G::GAPGroup, m::Function)\n\nGroup representation defined by m:G -> Mat_n.\n\n\n\n\n\n","category":"method"},{"location":"Representations/","page":"Representations","title":"Representations","text":"where in both cases the images are required to be fitting MatrixElem objects.","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"Since group reprsentation categories are tensor categories, we again have methods for the important operations","category":"page"},{"location":"Representations/","page":"Representations","title":"Representations","text":"Modules = [JuCat]\nPages = [\"GroupRepresentations.jl\"]","category":"page"},{"location":"Representations/#JuCat.Morphism-Union{Tuple{G}, Tuple{T}, Tuple{GroupRepresentation{T, G}, GroupRepresentation{T, G}, AbstractAlgebra.MatElem{T}}} where {T, G}","page":"Representations","title":"JuCat.Morphism","text":"Morphism(ρ::GroupRepresentation{T,G}, τ::GroupRepresentation{T,G}, m::MatElem{T}; check = true) where {T,G}\n\nMorphism between representations defined by m. If check == false equivariancy will not be checked.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#AbstractAlgebra.isisomorphic-Union{Tuple{G}, Tuple{T}, Tuple{GroupRepresentation{T, G}, GroupRepresentation{T, G}}} where {T, G}","page":"Representations","title":"AbstractAlgebra.isisomorphic","text":"isisomorphic(σ::GroupRepresentation{T,G}, τ::GroupRepresentation{T,G}) where {T,G}\n\nCheck whether σ and τ are isomorphic. If true return the isomorphism.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#Base.one-Union{Tuple{GroupRepresentationCategory{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Representations","title":"Base.one","text":"one(Rep::GroupRepresentationCategory{T,G}) where {T,G}\n\nReturn the trivial representation.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#Base.parent-Union{Tuple{GroupRepresentation{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Representations","title":"Base.parent","text":"parent(ρ::GroupRepresentation{T,G}) where {T,G}\n\nReturn the parent representation category of ρ.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#Base.zero-Union{Tuple{GroupRepresentationCategory{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Representations","title":"Base.zero","text":"zero(Rep::GroupRepresentationCategory{T,G}) where {T,G}\n\nReturn the zero reprensentation.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#Hecke.id-Union{Tuple{GroupRepresentation{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Representations","title":"Hecke.id","text":"id(ρ::GroupRepresentation{T,G}) where {T,G}\n\nReturn the identity on ρ.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#Hecke.tensor_product-Tuple{GroupRepresentationMorphism, GroupRepresentationMorphism}","page":"Representations","title":"Hecke.tensor_product","text":"tensor_product(f::GroupRepresentationMorphism, g::GroupRepresentationMorphism)\n\nReturn the tensor product of morphisms of representations.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#Hecke.tensor_product-Union{Tuple{T}, Tuple{GroupRepresentation{T, G} where G, GroupRepresentation{T, G} where G}} where T","page":"Representations","title":"Hecke.tensor_product","text":"tensor_product(ρ::GroupRepresentation{T}, τ::GroupRepresentation{T}) where T\n\nReturn the tensor product of representations.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#JuCat.Hom-Union{Tuple{G}, Tuple{T}, Tuple{GroupRepresentation{T, G}, GroupRepresentation{T, G}}} where {T, G}","page":"Representations","title":"JuCat.Hom","text":"Hom(σ::GroupRepresentation{T,G}, τ::GroupRepresentation{T,G}) where {T,G}\n\nReturn the hom-space of the representations as a vector space.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#JuCat.decompose-Tuple{GroupRepresentation}","page":"Representations","title":"JuCat.decompose","text":"decompose(σ::GroupRepresentation)\n\nDecompose the representation into a direct sum of simple objects. Return a list of tuples with simple objects and multiplicities.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#JuCat.dsum-Tuple{GroupRepresentationMorphism, GroupRepresentationMorphism}","page":"Representations","title":"JuCat.dsum","text":"dsum(f::GroupRepresentationMorphism, g::GroupRepresentationMorphism)\n\nDirect sum of morphisms of representations.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#JuCat.dsum-Union{Tuple{G}, Tuple{T}, Tuple{GroupRepresentation{T, G}, GroupRepresentation{T, G}}, Tuple{GroupRepresentation{T, G}, GroupRepresentation{T, G}, Bool}} where {T, G}","page":"Representations","title":"JuCat.dsum","text":"dsum(ρ::GroupRepresentation{T,G}, τ::GroupRepresentation{T,G}, morphisms::Bool = false) where {T,G}\n\nReturn the direct sum of representations. If morphisms is set true inclusion and projection morphisms are also returned.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#JuCat.simples-Union{Tuple{GroupRepresentationCategory{T, G}}, Tuple{G}, Tuple{T}} where {T, G}","page":"Representations","title":"JuCat.simples","text":"simples(Rep::GroupRepresentationCategory{T,G}) where {T,G}\n\nReturn a list of the simple objects in Rep.\n\n\n\n\n\n","category":"method"},{"location":"Representations/#Oscar.issemisimple-Tuple{GroupRepresentationCategory}","page":"Representations","title":"Oscar.issemisimple","text":"issemisimple(C::GroupRepresentationCategory)\n\nReturn true if C is semisimple else false.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"using JuCat, Oscar","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"CurrentModule = JuCat","category":"page"},{"location":"VectorSpaces/#Vector-Space-Categories","page":"Vector Spaces","title":"Vector Space Categories","text":"","category":"section"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Vector spaces in JuCat are of the abstract type","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"abstract type VectorSpaceObject{T} <: Object end","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"All objects with vector space structure like hom-spaces are and should be implemented as a subtype of this type. They always need the following fields:","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"basis::Vector{Any}\nparent::Category","category":"page"},{"location":"VectorSpaces/#Finite-Dimensional-VectorSpaces","page":"Vector Spaces","title":"Finite Dimensional VectorSpaces","text":"","category":"section"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"The simplest example to provide are the finite dimensional vector spaces over a field. This category has type","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"VectorSpaces{T} <: TensorCategory{T}","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"and can be constructed like so:","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"F,a = FiniteField(5,2)\nVec = VectorSpaces(F)","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Objects of this category are of the type","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"VSObject{T} <: VectorSpaceObject{T}","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Every vector space object is defined by a basis and a base field provided by the parent category.","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"VectorSpaceObject\nVectorSpaceObject(::VectorSpaces,::Int)","category":"page"},{"location":"VectorSpaces/#JuCat.VectorSpaceObject","page":"Vector Spaces","title":"JuCat.VectorSpaceObject","text":"VectorSpaceObject{T}\n\nAn object in the category of finite dimensional vector spaces.\n\n\n\n\n\n","category":"type"},{"location":"VectorSpaces/#JuCat.VectorSpaceObject-Tuple{VectorSpaces, Int64}","page":"Vector Spaces","title":"JuCat.VectorSpaceObject","text":"VectorSpaceObject(Vec::VectorSpaces, n::Int64)\nVectorSpaceObject(K::Field, n::Int)\nVectorSpaceObject(Vec::VectorSpaces, basis::Vector)\nVectorSpaceObject(K::Field, basis::Vector)\n\nThe n-dimensional vector space with basis v1,..,vn (or other specified basis)\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Morphisms in this Category are defined only by matrices of matching dimensions. They are typed as","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"VSMorphism{T} <: Morphism","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"and constructed giving a domain, codomain and matrix element.","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Morphism(::VectorSpaceObject{T}, ::VectorSpaceObject{T}, ::MatElem{T}) where T","category":"page"},{"location":"VectorSpaces/#JuCat.Morphism-Union{Tuple{T}, Tuple{VectorSpaceObject{T}, VectorSpaceObject{T}, AbstractAlgebra.MatElem{T}}} where T","page":"Vector Spaces","title":"JuCat.Morphism","text":"Morphism(X::VectorSpaceObject, Y::VectorSpaceObject, m::MatElem)\n\nReturn a morphism in the category of vector spaces defined by m.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#Graded-Vector-Spaces","page":"Vector Spaces","title":"Graded Vector Spaces","text":"","category":"section"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Very similar we have the category of finite dimensional (twisted) G-graded vector spaces for a finite group G. We have the type","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"GradedVectorSpaces{T,G} <: VectorSpaces{T,G}","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"and they are constructed in straightforward manner","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"G = symmetric_group(6)\nF,a = FiniteField(2,3)\nVecG = GradedVectorSpaces(F,G)","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"To add a nontrivial associator (twist) construct a Cocycle{3} object coding a 3-cocycle of the group G. By now no checking of this condition happens.","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"C = #TODO CoCycle(G, )\nVecG = #VectorSpaces(G,QQ,C)","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Graded vector spaces decompose into direct sums of vector spaces for each element in G.","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"GVSObject{T,G} <: VectorSpaceObject{T}","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"G = symmetric_group(5)\ng,s = gens(G)\nV1 = VectorSpaceObject(QQ,5)\nV2 = VectorSpaceObject(QQ, [:v, :w])\nW = VectorSpaceObject(g => V1, s => V2, g*s => V1⊗V2)","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Morphisms are implemented analogously by pairs of group elements and vectorspace objects.","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"GVSMorphism{T,G} <: Morphism","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"The constructors are","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Morphism(::GVSObject{T,G},::GVSObject{T,G},::Dict{G,S}) where {T,S<:VectorSpaceMorphism,G}\nMorphism(::GVSObject{T,G}, ::GVSObject{T,G},::Pair{G,S}...) where {T,G, S <: VectorSpaceMorphism{T}}","category":"page"},{"location":"VectorSpaces/#JuCat.Morphism-Union{Tuple{G}, Tuple{S}, Tuple{T}, Tuple{GVSObject{T, G}, GVSObject{T, G}, Dict{G, S}}} where {T, S<:VectorSpaceMorphism, G}","page":"Vector Spaces","title":"JuCat.Morphism","text":"Morphism(D::GVSObject, C::GVSObject, m::Dict)\n\nMorphism between graded vector spaces defined by pairs of elements and morphisms g => (Dg -> Cg).\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#JuCat.Morphism-Union{Tuple{S}, Tuple{G}, Tuple{T}, Tuple{GVSObject{T, G}, GVSObject{T, G}, Vararg{Pair{G, S}, N} where N}} where {T, G, S<:VectorSpaceMorphism{T}}","page":"Vector Spaces","title":"JuCat.Morphism","text":"Morphism(D::GVSObject, C::GVSObject, m::Pair...)\n\nMorphism between graded vector spaces defined by pairs of elements and morphisms g => (Dg -> Cg).\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#Functionality","page":"Vector Spaces","title":"Functionality","text":"","category":"section"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"(Graded) vector spaces form a semisimple tensor category. Thus the methods for direct sums, standard tensor products, one and zero object are all implemented.","category":"page"},{"location":"VectorSpaces/","page":"Vector Spaces","title":"Vector Spaces","text":"Modules = [JuCat]\nPages = [\"VectorSpaces.jl\"]\nOrder = [:function]","category":"page"},{"location":"VectorSpaces/#AbstractAlgebra.Generic.dim-Tuple{VectorSpaceObject}","page":"Vector Spaces","title":"AbstractAlgebra.Generic.dim","text":"dim(V::VectorSpaceObject) = length(V.basis)\n\nReturn the vector space dimension of V.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#AbstractAlgebra.isisomorphic-Tuple{VSObject, VSObject}","page":"Vector Spaces","title":"AbstractAlgebra.isisomorphic","text":"isisomorphic(V::VSObject, W::VSObject)\n\nCheck whether V and Ware isomorphic. Return the isomorphisms if existent.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#Base.one-Tuple{VectorSpaces}","page":"Vector Spaces","title":"Base.one","text":"one(Vec::VectorSpaces) = VectorSpaceObject(base_ring(Vec),1)\n\nReturn the one-dimensional vector space.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#Base.zero-Tuple{VectorSpaces}","page":"Vector Spaces","title":"Base.zero","text":"zero(Vec::VectorSpaces) = VectorSpaceObject(base_ring(Vec), 0)\n\nReturn the zero-dimensional vector space.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#Hecke.id-Union{Tuple{VectorSpaceObject{T}}, Tuple{T}} where T","page":"Vector Spaces","title":"Hecke.id","text":"id(X::VectorSpaceObject{T}) where T\n\nReturn the identity on the vector space X.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#Hecke.tensor_product-Union{Tuple{S2}, Tuple{S1}, Tuple{T}, Tuple{VectorSpaceObject{T}, VectorSpaceObject{T}}} where {T, S1, S2}","page":"Vector Spaces","title":"Hecke.tensor_product","text":"tensor_product(X::VectorSpaceObject{T}, Y::VectorSpaceObject{T}) where {T,S1,S2}\n\nReturn the tensor product of vector spaces.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#Hecke.tensor_product-Union{Tuple{T}, Tuple{VectorSpaceMorphism, VectorSpaceMorphism}} where T","page":"Vector Spaces","title":"Hecke.tensor_product","text":"tensor_product(f::VectorSpaceMorphism, g::VectorSpaceMorphism) where {T}\n\nReturn the tensor product of vector space morphisms.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#JuCat.Hom-Union{Tuple{T}, Tuple{VectorSpaceObject{T}, VectorSpaceObject{T}}} where T","page":"Vector Spaces","title":"JuCat.Hom","text":"Hom(X::VectorSpaceObject{T}, Y::VectorSpaceObject{T}) where T\n\nReturn the Hom(XY`) as a vector space.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#JuCat.associator-Union{Tuple{T}, Tuple{VectorSpaceObject{T}, VectorSpaceObject{T}, VectorSpaceObject{T}}} where T","page":"Vector Spaces","title":"JuCat.associator","text":"associator(X::VectorSpaceObject{T}, Y::VectorSpaceObject{T}, Z::VectorSpaceObject{T}) where T\n\nReturn the associator isomorphism a::(X⊗Y)⊗Z -> X⊗(Y⊗Z).\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#JuCat.dsum-Union{Tuple{T}, Tuple{VectorSpaceMorphism{T}, VectorSpaceMorphism{T}}} where T","page":"Vector Spaces","title":"JuCat.dsum","text":"dsum(f::VectorSpaceMorphism{T},g::VectorSpaceMorphism{T}) where T\n\nReturn the direct sum of morphisms of vector spaces.\n\n\n\n\n\n","category":"method"},{"location":"VectorSpaces/#JuCat.dsum-Union{Tuple{T}, Tuple{VectorSpaceObject{T}, VectorSpaceObject{T}}, Tuple{VectorSpaceObject{T}, VectorSpaceObject{T}, Any}} where T","page":"Vector Spaces","title":"JuCat.dsum","text":"dsum(X::VectorSpaceObject{T}, Y::VectorSpaceObject{T}, morphisms = false) where {T}\n\nDirect sum of vector spaces together with the embedding morphisms if morphisms = true.\n\n\n\n\n\n","category":"method"},{"location":"showcase/#Showcase","page":"Showcase","title":"Showcase","text":"","category":"section"},{"location":"showcase/","page":"Showcase","title":"Showcase","text":"This page showcases the various page elements that are supported by Documenter. It should be read side-by-side with its source (docs/src/showcase.md) to see what syntax exactly is used to create the various elements.","category":"page"},{"location":"#JuCat.jl","page":"Home","title":"JuCat.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"JuCat is a package under development with the intention to provide a framework as well a examples for computations in the realm of categories.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You need to have Julia installed. For reliable results Julia version at least 1.6 is required. To use JuCat do the following:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> import Pkg\njulia> Pkg.add(\"https://github.com/FabianMaeurer/JuCat.jl\")","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To use JuCat the structures from the OSCAR-System are required. Here a minimal usage Example.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using JuCat, Oscar;\nF = FiniteField(5)\nG = symmetric_group(2)\nX = gset(G,[1,2,3])\nC = ConvolutionCategory(X,F)\nsimples(C)\ngroethendieck_ring(C)","category":"page"},{"location":"#Acknowledgements","page":"Home","title":"Acknowledgements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This project was started under supervision of Prof. Ulrich Thiel  (University of Kaiserslautern). This work is a contribution to the SFB-TRR 195 'Symbolic Tools in Mathematics and their Application' of the German Research Foundation (DFG).","category":"page"}]
}
